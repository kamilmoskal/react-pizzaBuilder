{"version":3,"sources":["containers/Checkout/Checkout.module.scss","containers/Checkout/OrderForm/OrderForm.module.scss","components/OrderCheck/OrderCheck.module.scss","containers/Checkout/OrderForm/OrderForm.js","components/OrderCheck/OrderCheck.js","containers/Checkout/Checkout.js"],"names":["module","exports","CheckOpen","openCheck","CheckClosed","closeCheck","OrderForm","Field","ErrorMsg","OrderCheck","msg","buttons","connect","state","ingredients","mp","startedPrice","token","auth","userId","dispatch","onSubmitOrder","order","actions","props","react_default","a","createElement","formik_esm","className","classes","initialValues","name","street","zipCode","country","email","phone","deliveryMethod","onSubmit","values","totalPrice","key","price","orderData","toFixed","validate","errors","length","test","isNaN","render","_ref","touched","handleBlur","handleChange","handleSubmit","isSubmitting","isValidating","type","onChange","onBlur","value","placeholder","component","Button","btnType","clicked","cancel","continue","loading","ordered","isAuth","_useState","useState","_useState2","Object","slicedToArray","showOrderCheck","setShowOrderCheck","react_router","to","Spinner","Checkout","Pizza","react_transition_group","in","timeout","enter","exit","mountOnEnter","unmountOnExit","classNames","enterActive","exitActive","components_OrderCheck_OrderCheck","scrollHeight","document","body","history","push","match","url","setTimeout","window","scrollTo","path"],"mappings":"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","file":"static/js/4.d8d49e88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckOpen\":\"Checkout_CheckOpen__W1lRZ\",\"openCheck\":\"Checkout_openCheck__1r-Bk\",\"CheckClosed\":\"Checkout_CheckClosed__1LoM-\",\"closeCheck\":\"Checkout_closeCheck__wFIXg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderForm\":\"OrderForm_OrderForm__2UI8f\",\"Field\":\"OrderForm_Field__3rdBh\",\"ErrorMsg\":\"OrderForm_ErrorMsg__24pQz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderCheck\":\"OrderCheck_OrderCheck__3g3iq\",\"msg\":\"OrderCheck_msg__1OF3o\",\"buttons\":\"OrderCheck_buttons__1abaX\"};","import React from 'react';\r\nimport classes from './OrderForm.module.scss';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\nimport Button from '../../../components/UI/Button/Button';\r\n\r\nconst OrderForm = props => {\r\n  return (\r\n    <Formik\r\n      className={classes.OrderForm}\r\n      initialValues={{ \r\n        name: '',\r\n        street: '',\r\n        zipCode: '',\r\n        country: '',\r\n        email: '',\r\n        phone: '',\r\n        deliveryMethod: 'cheapest'\r\n      }}\r\n      onSubmit={(values, actions) => {\r\n        let totalPrice = props.startedPrice;\r\n        for(let key in props.ingredients){\r\n            totalPrice += props.ingredients[key].price\r\n        }\r\n\r\n        const orderData = {\r\n          ingredients: props.ingredients,\r\n          orderData: values,\r\n          userId: props.userId,\r\n          totalPrice: totalPrice.toFixed(2)\r\n        }\r\n        props.onSubmitOrder(props.token, orderData)\r\n      }}\r\n      validate={(values) => {\r\n        let errors = {}\r\n\r\n        if(!values.name){\r\n          errors.name = \"Name is required\"\r\n        } else if (values.name.length < 3) {\r\n          errors.name = 'Minimum 3 characters'\r\n        }\r\n\r\n        if(!values.street){\r\n          errors.street = \"Street is required\"\r\n        }\r\n\r\n        if(!values.zipCode){\r\n          errors.zipCode = \"Zipcode is required\"\r\n        }\r\n\r\n        if(!values.country){\r\n          errors.country = \"Country is required\"\r\n        }\r\n\r\n        if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n          errors.email = 'Invalid email address (xxx@xxx.xx)';\r\n        }\r\n\r\n        if(!values.phone){\r\n          errors.phone = \"Phone is required\"\r\n        } else if ( isNaN(values.phone) ) {\r\n          errors.phone = 'Phone must be write in digits'\r\n        } else if (values.phone.length < 7) {\r\n          errors.phone = 'Minimum 7 digits'\r\n        }\r\n        \r\n        return errors\r\n      }}\r\n      render={({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        isValidating\r\n      }) => (\r\n        <Form onSubmit={handleSubmit} className={classes.OrderForm}>\r\n          <input\r\n            className={classes.Field}\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.name}\r\n            name=\"name\"\r\n            placeholder=\"name*\"\r\n          />\r\n          {errors.name && touched.name && \r\n          <div className={classes.ErrorMsg}>{errors.name}</div>}\r\n          <Field\r\n            className={classes.Field}\r\n            type=\"text\"\r\n            name=\"street\"\r\n            placeholder=\"street*\"\r\n          />\r\n          <ErrorMessage name=\"street\" component=\"div\" className={classes.ErrorMsg}/>\r\n          <Field\r\n            className={classes.Field}\r\n            type=\"text\"\r\n            name=\"zipCode\"\r\n            placeholder=\"zipCode*\"\r\n          />\r\n          <ErrorMessage name=\"zipCode\" component=\"div\" className={classes.ErrorMsg}/>\r\n          <Field\r\n            className={classes.Field}\r\n            type=\"text\"\r\n            name=\"country\"\r\n            placeholder=\"country*\"\r\n          />\r\n          <ErrorMessage name=\"country\" component=\"div\" className={classes.ErrorMsg}/>\r\n          <Field\r\n            className={classes.Field}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n          />\r\n          <ErrorMessage name=\"email\" component=\"div\" className={classes.ErrorMsg}/>\r\n          <Field\r\n            className={classes.Field}\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            placeholder=\"phone*\"\r\n          />\r\n          <ErrorMessage name=\"phone\" component=\"div\" className={classes.ErrorMsg}/>\r\n          <Field\r\n            className={classes.Field}\r\n            component=\"select\"\r\n            name=\"deliveryMethod\">\r\n            <option value=\"cheapest\">Cheapest</option>\r\n            <option value=\"fastest\">Fastest</option>\r\n          </Field>\r\n          <ErrorMessage name=\"deliveryMethod\" component=\"div\" className={classes.ErrorMsg}/>\r\n          \r\n          <Button \r\n            btnType=\"Primary\"\r\n            //disabled={isSubmitting}\r\n            >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    />\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.mp.ingredients,\r\n    startedPrice: state.mp.startedPrice,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmitOrder: (token, order) => dispatch(actions.submitOrder(token, order))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderForm);","import React from 'react';\r\nimport classes from './OrderCheck.module.scss';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst OrderCheck = (props) => {\r\n    return (\r\n        <div className={classes.OrderCheck}>\r\n            <h1 className={classes.msg}>Do you want to continue order?</h1>\r\n            <div className={classes.buttons}>\r\n                <Button btnType=\"Danger\" clicked={props.cancel}>NO</Button>\r\n                <Button btnType=\"Primary\" clicked={props.continue}>YES</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderCheck;\r\n","import React, { useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport classes from './Checkout.module.scss';\r\nimport Pizza from '../../components/Pizza/Pizza';\r\nimport OrderForm from './OrderForm/OrderForm';\r\nimport OrderCheck from '../../components/OrderCheck/OrderCheck';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nconst Checkout = props => {\r\n    const [showOrderCheck, setShowOrderCheck] = useState(true);\r\n  \r\n    const continueHandler = () => {\r\n        const scrollHeight = document.body.scrollHeight;\r\n        props.history.push(props.match.url + '/order-form');\r\n        setTimeout(() => window.scrollTo(0,scrollHeight), 100) \r\n\r\n        setShowOrderCheck(!showOrderCheck);\r\n    }\r\n    const cancelHandler = () => {\r\n        props.history.push('/');\r\n    }\r\n    if (!props.isAuth){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    if (props.ordered){\r\n        return <Redirect to=\"/orders\" />\r\n    }\r\n    if (props.loading){\r\n        return <Spinner />\r\n    }\r\n    return (\r\n        <div className={classes.Checkout}>\r\n            <Pizza ingredients={props.ingredients}/>\r\n\r\n            <CSSTransition \r\n                in={showOrderCheck} \r\n                timeout={{ enter: 400, exit: 1000 }}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                classNames={{\r\n                        enter: '',\r\n                        enterActive: classes['CheckOpen'],\r\n                        exit: '',\r\n                        exitActive: classes['CheckClosed']\r\n                }}>\r\n                <OrderCheck \r\n                    ingredients={props.ingredients}\r\n                    continue={continueHandler}\r\n                    cancel={cancelHandler}/>\r\n            </CSSTransition>\r\n            \r\n            <Route path={props.match.url + '/order-form'} component={OrderForm} />\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n      ingredients: state.mp.ingredients,\r\n      loading: state.order.loading,\r\n      ordered: state.order.ordered,\r\n      isAuth: state.auth.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"],"sourceRoot":""}